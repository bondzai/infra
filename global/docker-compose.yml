version: "3.7"

services:

    redis:
        image: ${REDIS_IMAGE}
        init: true
        container_name: redis_con
        hostname: redis
        restart: always
        ports:
            - 6379:6379
        networks:
            - backend

    pgadmin:
        image: ${PG_IMAGE}
        init: true
        container_name: pg_con
        hostname: pg
        restart: always
        environment:
            - PGADMIN_DEFAULT_EMAIL=admin@swd.dev
            - PGADMIN_DEFAULT_PASSWORD=swd12345
        ports:
            - 5050:80
        networks:
            - backend

    db:
        image: ${POSTGRES_IMAGE}
        init: true
        container_name: db_con
        hostname: db
        restart: always
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=jb
            - POSTGRES_PASSWORD=12345678
            - POSTGRES_DB=init
        networks:
            - backend

    influxdb:
        image: ${INFLUX_IMAGE}
        init: true
        container_name: influx_con
        hostname: influx
        restart: always
        ports:
            - 8086:8086
        volumes:
            - ./data/influx_backup:/var/lib/influxdb
            - .:/repo/
        environment:
            - DOCKER_INFLUXDB_INIT_USERNAME=admin
            - DOCKER_INFLUXDB_INIT_PASSWORD=password
            - DOCKER_INFLUXDB_INIT_ORG=jb
            - DOCKER_INFLUXDB_INIT_BUCKET=demo
        networks:
            - backend

    # grafana:
    #     image: ${GRAFANA_IMAGE}
    #     init: true
    #     container_name: grafana_con
    #     hostname: grafana
    #     restart: always
    #     ports:
    #         - 3000:3000
    #     volumes:
    #         - ./data/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    #         - grafana-data:/var/lib/grafana

    uptime-kuma:
        image: louislam/uptime-kuma:1
        container_name: uptime-kuma
        volumes:
            - ./data/uptime-kuma-data:/app/data
        ports:
            - 3001:3001  # <Host Port>:<Container Port>
        restart: always
        
volumes:
    data:
networks:
    backend:
        driver: bridge
