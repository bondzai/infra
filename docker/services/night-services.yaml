services:
  # kafka stack
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  # kafka stack
  kafka:
    image: "wurstmeister/kafka:latest"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  # network
  pihole:
    image: ${PIHOLE_IMAGE:-pihole/pihole:latest}
    container_name: pihole-con
    hostname: pihole
    ports:
      - "1053:53/tcp"
      - "1053:53/udp"
      - "1067:67/udp"
      - "1080:80/tcp"
      - "1443:443/tcp"
    environment:
      TZ: "Asia/Bangkok"
      WEBPASSWORD: 1234
    volumes:
      - "../data/etc-pihole:/etc/pihole"
      - "../data/etc-dnsmasq.d:/etc/dnsmasq.d"
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    restart: always

  # proxy 
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "18080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: always

  nginx:
    image: ${NGINX_IMAGE:-nginx:latest}
    ports:
      - "${NGINX_PORT:-80}:80"

  # automate
  ctfreak:
    image: jypsoftware/ctfreak
    container_name: ctfreak-con
    hostname: ctfreak
    restart: always
    volumes:
      - ../data/ctfreak-data:/data
    ports:
      - "6700:6700"
    environment:
      - TZ=Asia/Bangkok

  crontab-ui:
    image: alseambusher/crontab-ui:latest
    container_name: crontab-ui-con
    hostname: crontab-ui
    restart: always
    volumes:
      - ../data/crontabs:/crontab-ui/crontabs
    ports:
      - "18000:8000"

  uptime-kuma:
    image: ${UPTIME_KUMA_IMAGE:-louislam/uptime-kuma:1}
    container_name: uptime-kuma-con
    hostname: uptime-kuma
    volumes:
      - ../data/uptime-kuma-data:/app/data
    ports:
      - "18001:3001"
    restart: always

  semaphore:
    image: semaphoreui/semaphore:latest
    container_name: semaphore-con
    hostname: semaphore
    environment:
      SEMAPHORE_DB_DIALECT: bolt
      SEMAPHORE_ADMIN_PASSWORD: changeme
      SEMAPHORE_ADMIN_NAME: admin
      SEMAPHORE_ADMIN_EMAIL: admin@localhost
      SEMAPHORE_ADMIN: admin
    volumes:
      - /path/to/data/home:/etc/semaphore # config.json location
      - /path/to/data/lib:/var/lib/semaphore # database.boltdb location (Not required if using mysql or postgres)
    ports:
      - "6701:3000"
    restart: always
